{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang2057{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2 Times New Roman;}{\f2\fnil\fcharset2 Symbol;}}
{\colortbl ;\red0\green176\blue80;\red28\green28\blue28;\red255\green0\blue0;}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\b\f0\fs36\lang9 We will:\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sl276\slmult1\b0\fs28 Define a \b test \b0 before writing the SQL query.\par
{\pntext\f2\'B7\tab}Use only \b SELECT \b0 (no functions or procedures).\par
{\pntext\f2\'B7\tab}Use \b utPLSQL \b0 to \b assert \b0 the result.\par

\pard\sl276\slmult1\par
\b What We\rquote ll Test\b0\par
We want to write a SQL query to get an employee\rquote s first name by ID.\par
\par
\b Expected behavior:\par
\par
\cf1\b0\fs24 SELECT first_name FROM employees WHERE employee_id = 100;\par
-- Should return 'Steven'\par
\par
\cf0\b Let\rquote s do TDD to develop this!\par
\fs32\par
Step 1: Prerequisites\par
\fs24 Make sure:\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sl276\slmult1 utPLSQL \b0 is installed and working.\par
{\pntext\f2\'B7\tab}You have a schema to create test packages.\par
{\pntext\f2\'B7\tab}You can run \b ut.run(...) \b0 and view results.\par

\pard\sl276\slmult1\b\par
\par

\pard\nowidctlpar\fs28\lang1023 STEP 2: Set Up Sample Table and Data \b0\fs24\par

\pard\sa120\par
\cf2\b Let\rquote s create a simple table: \cf0\b0\par

\pard\li709\cf1 CREATE TABLE employees (\par
  emp_id     NUMBER PRIMARY KEY,\par
  emp_name   VARCHAR2(100),\par
  department VARCHAR2(50),\par
  salary     NUMBER\par
);\par

\pard\li709\sa120\par

\pard\li709 INSERT INTO employees VALUES (100, '\lang9 Steven\lang1023 ', 'HR', 4000);\par
INSERT INTO employees VALUES (200, 'Bob', 'IT', 6000);\par
INSERT INTO employees VALUES (300, 'Carol', 'HR', 5000);\par
COMMIT;\par

\pard\li709\sa120\cf0\par
\par

\pard\sl276\slmult1\b\fs32\lang9 Step 3: Write the Test First (Before the Query Exists)\par
\fs28 We create a test package to check:\par
\par
Test Package Spec\par

\pard\li720\sl276\slmult1\cf1\b0\fs24 CREATE OR REPLACE PACKAGE test_select_employee IS\par
  --%suite(Pure SQL SELECT Tests)\par
\par
  --%test(Should return \lang1023 emp_name   \lang9 = 'Steven' for employee_id = 100)\par
  PROCEDURE test_get_first_name_by_id;\par
END test_select_employee;\par
/\par

\pard\fi-578\li720\sl276\slmult1\cf0\b\fs28 Test Package Body\par

\pard\fi-578\li1440\sl276\slmult1\cf1\b0\fs24 CREATE OR REPLACE PACKAGE BODY test_select_employee IS\par
\par
  PROCEDURE test_get_first_name_by_id IS\par
    l_name VARCHAR2(100);\par
  BEGIN\par
    SELECT \lang1023 emp_name   \lang9 INTO l_name\par
    FROM employees\par
    WHERE \lang1023 emp_id \lang9 = 100;\par
\par
    ut.expect(l_name).to_equal('Steven');\par
  END;\par
\par
END test_select_employee;\par
/\par
\par

\pard\fi-1298\li1440\sl276\slmult1\cf0\b\fs32  Step 4: Run the Test (It Should Fail Initially)\par
Now run:\par

\pard\fi-1298\li2160\sl276\slmult1\cf1\b0\fs24 BEGIN\par
   ut.run('test_select_employee');\par
END;\par
\b\fs32 /\par
\par

\pard\fi-2018\li2160\sl276\slmult1  \cf0\fs36 You might get:\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li862\sl276\slmult1\b0\fs28 Table doesn\rquote t exist\par
{\pntext\f2\'B7\tab}No data found\par
{\pntext\f2\'B7\tab}Expected "Steven", got NULL\par

\pard\sl276\slmult1\par
This is \b expected in TDD \b0\f1\emdash  the test should fail first.\par
\fs24\par
\b\fs32 Step \f0\lang2057 5\f1\lang9 : Create the SQL Logic to Pass the Test\par
\b0\fs28 If the table/view doesn\rquote t exist, create a simple one:\b\fs32\par
\par

\pard\li720\sl276\slmult1\cf1\b0\fs24 CREATE TABLE employees (\par
   employee_id NUMBER PRIMARY KEY,\par
   first_name  VARCHAR2(100)\par
);\par
\f0\par

\pard\fi-1298\li1440\sl276\slmult1\cf0\b\fs28 Insert test data:\par
\cf1\b0\fs24 INSERT INTO employees (employee_id, first_name) VALUES (100, 'Steven');\par
COMMIT;\par
\par
\cf0\fs28 Now we\rquote ve written the \ldblquote production SQL logic\rdblquote  to support the test.\par
\par
\b\fs32 Step 5: Re-run the Test\par
\cf1\b0\fs24 BEGIN\par
   ut.run('test_select_employee');\par
END;\par
/\par
\par
\cf0\b\fs28 Output:\cf1\b0\fs24\par
\fs28 Pure SQL SELECT Tests\par
  Should return first_name = 'Steven' for employee_id = 100 [SUCCESS]\par
\fs24\par
\cf0\b\fs28 Congratulations \f1\emdash  this is TDD for SQL:\b0\par

\pard\li142\sl276\slmult1 You wrote the test first, it failed, you added the SQL logic, and now it \f0\lang2057 p\f1\lang9 asses!\par
\par
\par
\b\fs32 Optional: Clean and Isolate Tests\par
\b0 Add --%beforeeach and --%aftereach to reset test data:\par
\cf1\fs24 --%beforeeach\par
PROCEDURE setup_data;\par
\par
--%aftereach\par
PROCEDURE cleanup_data;\par
\par
\cf0\b\fs28 Inside the package body:\par
\cf1\b0\fs24 PROCEDURE setup_data IS\par
BEGIN\par
  INSERT INTO employees (employee_id, first_name)\par
  VALUES (100, 'Steven');\par
END;\par
\par
PROCEDURE cleanup_data IS\par
BEGIN\par
  DELETE FROM employees;\par
END;\fs22\par
\cf0\b\fs32\par
\par
\cf3\f0\fs40\lang2057 The output/Result of the Test:\cf0\par
\cf1\b0\fs24 Pure SQL SELECT Tests\par
  Should return emp_name   = 'Steven' for employee_id = 100 [.008 sec] (FAILED - 1)\par
 \par
Failures:\par
 \par
  1) test_get_first_name_by_id\par
      Actual: 'Steven' (varchar2) was expected to equal: 'Steven2' (varchar2)\par
      at "UT_TESTER.TEST_SELECT_EMPLOYEE.TEST_GET_FIRST_NAME_BY_ID", line 10 ut.expect(l_name).to_equal('Steven2');\par
       \par
Finished in .011 seconds\par
1 tests, 1 failed, 0 errored, 0 disabled, 0 warning(s)\f1\lang9\par
\cf0\fs28\par
\b\fs32 Let me break down your test output piece by piece to explain exactly what happened:\par
\par
Test Suite Summary\cf1\par
\b0\fs24 Pure SQL SELECT Tests\par
  Should return emp_name = 'Steven' for employee_id = 100 [.008 sec] (FAILED - 1)\par
\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li862\sl276\slmult1\cf0\b Test Suite Name: \b0 "Pure SQL SELECT Tests" (from your --%suite annotation)\par
{\pntext\f2\'B7\tab}\b Test Case Description: \b0 "Should return emp_name = 'Steven' for employee_id = 100" (from your --%test annotation)\par
{\pntext\f2\'B7\tab}\b Execution Time: \b0 The test took 0.008 seconds to run\par
{\pntext\f2\'B7\tab}\b Result: (FAILED - 1) - \b0 This test failed (and it's the 1st/only test in the suite)\par

\pard\sl276\slmult1\par
\b\fs32 Failure Details\par
\cf1\b0\fs24 Failures:\par
  1) test_get_first_name_by_id\par
      Actual: 'Steven' (varchar2) was expected to equal: 'Steven2' (varchar2)\par
      at "UT_TESTER.TEST_SELECT_EMPLOYEE.TEST_GET_FIRST_NAME_BY_ID", line 10 ut.expect(l_name).to_equal('Steven2');\par
\par

\pard 
{\pntext\f1 1.\tab}{\*\pn\pnlvlbody\pnf1\pnindent0\pnstart1\pndec{\pntxta.}}
\fi-360\li720\sl276\slmult1\cf0\b Test Procedure Name: \b0 test_get_first_name_by_id\b\par
{\pntext\f1 2.\tab}Assertion Failure:\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li1080\sl276\slmult1\f0\lang2057 Actual Value: \b0 'Steven' (of type varchar2) - This is what your query returned from the database\b\par
{\pntext\f2\'B7\tab}Expected Value\b0 : 'Steven2' (of type varchar2) - This is what your test expected\b\f1\fs28\lang9\par

\pard\li360\sl276\slmult1\f0\lang2057 3. \fs24 Location of Failure:\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li1080\sl276\slmult1 Package: \b0 UT_TESTER.TEST_SELECT_EMPLOYEE\par
{\pntext\f2\'B7\tab}\b Procedure\b0 : TEST_GET_FIRST_NAME_BY_ID\par
{\pntext\f2\'B7\tab}\b Line\b0 : 10\par
{\pntext\f2\'B7\tab}\b Exact Code: \b0 ut.expect(l_name).to_equal('Steven2')\f1\fs28\lang9\par

\pard\sl276\slmult1\par
\b\f0\fs36\lang2057 Final Statistics\par

\pard\li720\sl276\slmult1\cf1\b0\fs28 Finished in .011 seconds\par
1 tests, 1 failed, 0 errored, 0 disabled, 0 warning(s)\par

\pard 
{\pntext\f0 1.\tab}{\*\pn\pnlvlbody\pnf0\pnindent0\pnstart1\pndec{\pntxta.}}
\fi-360\li720\sl276\slmult1\cf0 Total Execution Time: 0.011 seconds for the entire test suite\par
{\pntext\f0 2.\tab}Test Counts:\f1\lang9\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li1080\sl276\slmult1\f0\lang2057 1 test total\par
{\pntext\f2\'B7\tab}1 failed\par
{\pntext\f2\'B7\tab}0 tests caused errors (vs assertions)\par
{\pntext\f2\'B7\tab}0 tests were disabled\par
{\pntext\f2\'B7\tab}0 warnings\f1\lang9\par
}
 